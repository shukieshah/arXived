{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar stream_1 = require(\"stream\");\n\nvar CSV_1 = require(\"./CSV\");\n\nvar Parser_1 = require(\"./Parser\");\n\nvar Streamer =\n/** @class */\nfunction (_super) {\n  __extends(Streamer, _super);\n\n  function Streamer(options) {\n    var _this = _super.call(this, {\n      readableObjectMode: true,\n      writableObjectMode: false\n    }) || this; // Transform.call(this, );\n\n\n    _this.buffer = '';\n    _this.sep = options && options.separator;\n    _this.quo = options && options.quote;\n    return _this;\n  } // overridden function with same signature\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  Streamer.prototype._transform = function (chunk, _encoding, callback) {\n    var _this = this;\n\n    this.buffer = this.buffer.concat(chunk.toString());\n\n    if (this.sep === undefined) {\n      // try to detect the separator if not provided\n      this.sep = CSV_1.detect(this.buffer);\n    }\n\n    var csv = new Parser_1.Parser(this.buffer, this.sep, this.quo);\n    var rows = csv.File();\n\n    if (csv.linePointer !== csv.pointer) {\n      rows.pop();\n    }\n\n    this.buffer = this.buffer.slice(csv.linePointer);\n\n    if (rows.length > 0) {\n      rows.forEach(function (row) {\n        _this.push(row);\n      });\n    }\n\n    callback();\n  }; // TODO\n\n  /*\n  push(chunk: any, encoding?: string | undefined): boolean {\n    throw new Error(\"Method not implemented.\");\n  }\n  */\n\n\n  Streamer.prototype._flush = function (callback) {\n    var _this = this;\n\n    var csv = new Parser_1.Parser(this.buffer, this.sep, this.quo);\n    var rows = csv.File();\n\n    if (rows.length > 0) {\n      rows.forEach(function (row) {\n        _this.push(row);\n      });\n    }\n\n    callback();\n  };\n\n  return Streamer;\n}(stream_1.Transform);\n\nexports.Streamer = Streamer;","map":{"version":3,"sources":["/Users/shukan/Google Drive/Personal Projects/arxived/node_modules/csv-string/dist/Streamer.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","stream_1","require","CSV_1","Parser_1","Streamer","_super","options","_this","call","readableObjectMode","writableObjectMode","buffer","sep","separator","quo","quote","_transform","chunk","_encoding","callback","concat","toString","undefined","detect","csv","Parser","rows","File","linePointer","pointer","pop","slice","length","forEach","row","push","_flush","Transform"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar stream_1 = require(\"stream\");\nvar CSV_1 = require(\"./CSV\");\nvar Parser_1 = require(\"./Parser\");\nvar Streamer = /** @class */ (function (_super) {\n    __extends(Streamer, _super);\n    function Streamer(options) {\n        var _this = _super.call(this, {\n            readableObjectMode: true,\n            writableObjectMode: false,\n        }) || this;\n        // Transform.call(this, );\n        _this.buffer = '';\n        _this.sep = options && options.separator;\n        _this.quo = options && options.quote;\n        return _this;\n    }\n    // overridden function with same signature\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Streamer.prototype._transform = function (chunk, _encoding, callback) {\n        var _this = this;\n        this.buffer = this.buffer.concat(chunk.toString());\n        if (this.sep === undefined) {\n            // try to detect the separator if not provided\n            this.sep = CSV_1.detect(this.buffer);\n        }\n        var csv = new Parser_1.Parser(this.buffer, this.sep, this.quo);\n        var rows = csv.File();\n        if (csv.linePointer !== csv.pointer) {\n            rows.pop();\n        }\n        this.buffer = this.buffer.slice(csv.linePointer);\n        if (rows.length > 0) {\n            rows.forEach(function (row) {\n                _this.push(row);\n            });\n        }\n        callback();\n    };\n    // TODO\n    /*\n    push(chunk: any, encoding?: string | undefined): boolean {\n      throw new Error(\"Method not implemented.\");\n    }\n    */\n    Streamer.prototype._flush = function (callback) {\n        var _this = this;\n        var csv = new Parser_1.Parser(this.buffer, this.sep, this.quo);\n        var rows = csv.File();\n        if (rows.length > 0) {\n            rows.forEach(function (row) {\n                _this.push(row);\n            });\n        }\n        callback();\n    };\n    return Streamer;\n}(stream_1.Transform));\nexports.Streamer = Streamer;\n"]},"metadata":{},"sourceType":"script"}