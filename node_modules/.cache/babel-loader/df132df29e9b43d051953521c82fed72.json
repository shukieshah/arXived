{"ast":null,"code":"var _jsxFileName = \"/Users/shukan/Google Drive/Personal Projects/arxived/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const topic = \"let's play commentary\";\n  const limit = 10;\n  const BASE_API_URL = `http://export.arxiv.org/api/query?search_query=all:\"${topic}\"&sortBy=submittedDate&sortOrder=descending&max_results=${limit}`;\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    scrapeArticles();\n  }, []);\n\n  const scrapeArticles = async () => {\n    const response = await fetch(BASE_API_URL);\n    const responseString = await response.text();\n    const data = new window.DOMParser().parseFromString(responseString, \"text/xml\");\n    const entries = data.querySelectorAll('entry');\n\n    for (var i = 0; i < entries.length; i++) {\n      console.log(entries[i].querySelector('title').textContent);\n      console.log(entries[i].querySelector('published').textContent);\n      console.log(entries[i].querySelector('author').textContent);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"input-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"topic-search-bar\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Scrape arXiv\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/shukan/Google Drive/Personal Projects/arxived/src/App.js"],"names":["React","useEffect","useState","App","topic","limit","BASE_API_URL","counter","setCounter","scrapeArticles","response","fetch","responseString","text","data","window","DOMParser","parseFromString","entries","querySelectorAll","i","length","console","log","querySelector","textContent"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAGhB,QAAMC,KAAK,GAAG,uBAAd;AACA,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,YAAY,GAAI,uDAAsDF,KAAM,2DAA0DC,KAAM,EAAlJ;AAGA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,cAAc,GAAG,YAAY;AACjC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,YAAD,CAA5B;AACA,UAAMM,cAAc,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA7B;AACA,UAAMC,IAAI,GAAI,IAAIC,MAAM,CAACC,SAAX,EAAD,CAAyBC,eAAzB,CAAyCL,cAAzC,EAAyD,UAAzD,CAAb;AACA,UAAMM,OAAO,GAAGJ,IAAI,CAACK,gBAAL,CAAsB,OAAtB,CAAhB;;AAEA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGF,OAAO,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCE,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACE,CAAD,CAAP,CAAWI,aAAX,CAAyB,OAAzB,EAAkCC,WAA9C;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACE,CAAD,CAAP,CAAWI,aAAX,CAAyB,WAAzB,EAAsCC,WAAlD;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACE,CAAD,CAAP,CAAWI,aAAX,CAAyB,QAAzB,EAAmCC,WAA/C;AACD;AACF,GAXD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,IAAI,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,CADF;AAUD,CAtCD;;AAwCA,eAAetB,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\n\nconst App = () => {\n\n  \n  const topic = \"let's play commentary\";\n  const limit = 10;\n  const BASE_API_URL = `http://export.arxiv.org/api/query?search_query=all:\"${topic}\"&sortBy=submittedDate&sortOrder=descending&max_results=${limit}`;\n\n  \n  const [counter, setCounter] = useState(0);\n  \n  useEffect(() => {\n    scrapeArticles();\n  }, []);\n\n  const scrapeArticles = async () => {\n    const response = await fetch(BASE_API_URL);\n    const responseString = await response.text();\n    const data = (new window.DOMParser()).parseFromString(responseString, \"text/xml\")\n    const entries = data.querySelectorAll('entry');\n\n    for (var i=0; i < entries.length; i++) {\n      console.log(entries[i].querySelector('title').textContent);\n      console.log(entries[i].querySelector('published').textContent);\n      console.log(entries[i].querySelector('author').textContent);\n    }\n  }\n\n\n  return (\n    <div className='App'>\n      <form className=\"input-form\">\n        <input className=\"topic-search-bar\" type=\"text\"/>\n        <button className=\"submit-button\" type=\"submit\">\n          Scrape arXiv\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}