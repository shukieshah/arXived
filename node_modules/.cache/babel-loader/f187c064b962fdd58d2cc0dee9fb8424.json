{"ast":null,"code":"var _jsxFileName = \"/Users/shukan/Google Drive/Personal Projects/arxived/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport Entry from './Entry.js';\nimport './App.css';\n\nconst App = () => {\n  // ['title', 'published', 'firstauthor', 'lastauthor', 'summary', 'category', 'link']\n  const [entries, setEntries] = useState([]);\n  const [topicInput, setTopicInput] = useState('');\n  const [limitInput, setLimitInput] = useState('');\n  const [query, setQuery] = useState({\n    topic: '',\n    limit: 10,\n    startDate: '',\n    endDate: ''\n  });\n  useEffect(() => {\n    scrapeArXiv();\n  }, [query]);\n\n  const scrapeArXiv = async () => {\n    const response = await fetch(`http://export.arxiv.org/api/query?search_query=all:\"${query.topic}\"&sortBy=submittedDate&sortOrder=descending&max_results=${query.limit}`);\n    const responseString = await response.text();\n    const results = new window.DOMParser().parseFromString(responseString, \"text/xml\").querySelectorAll('entry');\n    var data = [];\n\n    for (var i = 0; i < results.length; i++) {\n      var metadata = {};\n      metadata['title'] = results[i].querySelector('title').textContent.trim();\n      metadata['published'] = results[i].querySelector('published').textContent.trim();\n      metadata['summary'] = results[i].querySelector('summary').textContent.trim();\n      metadata['link'] = results[i].querySelector('link').getAttribute('href').trim();\n      const authors = results[i].querySelectorAll('author');\n      var names = [];\n\n      for (var j = 0; j < authors.length; j++) {\n        names.push(authors[j].textContent.trim());\n      }\n\n      metadata['authors'] = names;\n      data.push(metadata);\n    }\n\n    console.log('Scraped ' + data.length + ' entries');\n    setEntries(data);\n  };\n\n  const updateTopic = e => {\n    setTopicInput(e.target.value);\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    setQuery({\n      topic: topicInput,\n      limit: 10,\n      startDate: '',\n      endDate: ''\n    });\n    setTopicInput('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"arXived\")), /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"App-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"arXived\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitForm,\n    className: \"input-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"topic-search-bar\",\n    type: \"text\",\n    placeholder: \"Enter a topic of interest\",\n    value: topicInput,\n    onChange: updateTopic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Scrape arXiv\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"entries\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      'text-align': 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Top Matches\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Download as CSV for the full results.\")), entries.map((data, i) => /*#__PURE__*/React.createElement(Entry, {\n    key: i,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/shukan/Google Drive/Personal Projects/arxived/src/App.js"],"names":["React","useEffect","useState","Helmet","Entry","App","entries","setEntries","topicInput","setTopicInput","limitInput","setLimitInput","query","setQuery","topic","limit","startDate","endDate","scrapeArXiv","response","fetch","responseString","text","results","window","DOMParser","parseFromString","querySelectorAll","data","i","length","metadata","querySelector","textContent","trim","getAttribute","authors","names","j","push","console","log","updateTopic","e","target","value","submitForm","preventDefault","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport Entry from './Entry.js';\nimport './App.css';\n\nconst App = () => {\n\n  // ['title', 'published', 'firstauthor', 'lastauthor', 'summary', 'category', 'link']\n\n  const [entries, setEntries] = useState([]);\n  const [topicInput, setTopicInput] = useState('');\n  const [limitInput, setLimitInput] = useState('');\n  const [query, setQuery] = useState({\n    topic: '',\n    limit: 10,\n    startDate: '',\n    endDate: ''\n  });\n\n\n  useEffect(() => {\n    scrapeArXiv();\n  }, [query]);\n\n  const scrapeArXiv = async () => {\n    const response = await fetch(`http://export.arxiv.org/api/query?search_query=all:\"${query.topic}\"&sortBy=submittedDate&sortOrder=descending&max_results=${query.limit}`);\n    const responseString = await response.text();\n    const results = (new window.DOMParser()).parseFromString(responseString, \"text/xml\").querySelectorAll('entry');\n    var data = []\n\n    for (var i = 0; i < results.length; i++) {\n      var metadata = {}\n      metadata['title'] = results[i].querySelector('title').textContent.trim();\n      metadata['published'] = results[i].querySelector('published').textContent.trim();\n      metadata['summary'] = results[i].querySelector('summary').textContent.trim();\n      metadata['link'] = results[i].querySelector('link').getAttribute('href').trim();\n\n      const authors = results[i].querySelectorAll('author');\n      var names = [];\n      for (var j = 0; j < authors.length; j++) {\n        names.push(authors[j].textContent.trim());\n      }\n      metadata['authors'] = names;\n      data.push(metadata);\n    }\n\n    console.log('Scraped ' + data.length + ' entries');\n    setEntries(data);\n  }\n\n\n  const updateTopic = e => {\n    setTopicInput(e.target.value);\n  }\n\n  const submitForm = e => {\n    e.preventDefault();\n    setQuery({\n      topic: topicInput,\n      limit: 10,\n      startDate: '',\n      endDate: ''\n    });\n    setTopicInput('');\n  }\n\n  return (\n    <div className='App'>\n      <Helmet>\n          <title>{\"arXived\"}</title>\n      </Helmet>\n      <header className=\"App-header\">\n        <h1 className=\"App-title\">arXived</h1>\n      </header>\n      <form onSubmit={submitForm} className=\"input-form\" >\n        <input className=\"topic-search-bar\" type=\"text\" placeholder=\"Enter a topic of interest\"\n          value={topicInput} onChange={updateTopic} />\n        <button className=\"submit-button\" type=\"submit\">\n          Scrape arXiv\n        </button>\n      </form>\n      <div className='entries'>\n        <div style={{'text-align': 'center'}}>\n          <h1>Top Matches</h1>\n          <p>Download as CSV for the full results.</p>\n        </div>\n        {entries.map((data, i) => (\n          <Entry key={i} data={data} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}