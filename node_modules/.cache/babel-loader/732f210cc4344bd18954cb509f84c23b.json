{"ast":null,"code":"// Generated by CoffeeScript 2.3.2\n// # CSV Generator\n// Please look at the [documentation](https://csv.js.org/generate/) for additional information.\nvar Generator,\n    stream,\n    util,\n    indexOf = [].indexOf;\nstream = require('stream');\nutil = require('util'); // ## Usage  \n// Stream API, for maximum of power:\n// `generate([options])`\n// Callback approach, for ease of use:\n// `generate([options], callback)`\n// ## Source Code\n\nmodule.exports = function () {\n  var callback, data, generator, options;\n\n  if (arguments.length === 2) {\n    options = arguments[0];\n    callback = arguments[1];\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      options = {};\n      callback = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  } else if (arguments.length === 0) {\n    options = {};\n  }\n\n  generator = new Generator(options);\n\n  if (callback) {\n    data = [];\n    generator.on('readable', function () {\n      var d, results;\n      results = [];\n\n      while (d = generator.read()) {\n        results.push(data.push(d));\n      }\n\n      return results;\n    });\n    generator.on('error', callback);\n    generator.on('end', function () {\n      if (!generator.options.objectMode) {\n        if (generator.options.encoding) {\n          data = data.join('');\n        } else {\n          data = Buffer.concat(data);\n        }\n      }\n\n      return callback(null, data);\n    });\n  }\n\n  return generator;\n}; // ## `Generator([options])`\n// Feel free to ask for new features and to participate by writting issues and preparing push requests.\n// Options are documented [here](http://csv.js.org/generate/options/).\n\n\nGenerator = function (options = {}) {\n  var accepted_header_types, base, base1, base10, base11, base2, base3, base4, base5, base6, base7, base8, base9, i, j, k, len, ref, v;\n\n  if (options.high_water_mark) {\n    // Convert Stream Readable options if underscored\n    options.highWaterMark = options.high_water_mark;\n  }\n\n  if (options.object_mode) {\n    options.objectMode = options.object_mode;\n  } // Call parent constructor\n\n\n  stream.Readable.call(this, options); // Clone and camelize options\n\n  this.options = {};\n\n  for (k in options) {\n    v = options[k];\n    this.options[Generator.camelize(k)] = v;\n  } // Normalize options\n\n\n  if ((base = this.options).columns == null) {\n    base.columns = 8;\n  }\n\n  if ((base1 = this.options).delimiter == null) {\n    base1.delimiter = ',';\n  }\n\n  if ((base2 = this.options).duration == null) {\n    base2.duration = null;\n  }\n\n  if ((base3 = this.options).encoding == null) {\n    base3.encoding = null;\n  }\n\n  if ((base4 = this.options).end == null) {\n    base4.end = null;\n  }\n\n  if ((base5 = this.options).eof == null) {\n    base5.eof = false;\n  }\n\n  if ((base6 = this.options).fixedSize == null) {\n    base6.fixedSize = false;\n  }\n\n  if ((base7 = this.options).length == null) {\n    base7.length = -1;\n  }\n\n  if ((base8 = this.options).maxWordLength == null) {\n    base8.maxWordLength = 16;\n  }\n\n  if ((base9 = this.options).rowDelimiter == null) {\n    base9.rowDelimiter = '\\n';\n  }\n\n  if ((base10 = this.options).seed == null) {\n    base10.seed = false;\n  }\n\n  if ((base11 = this.options).sleep == null) {\n    base11.sleep = 0;\n  }\n\n  if (this.options.eof === true) {\n    // Default values\n    this.options.eof = this.options.rowDelimiter;\n  } // State\n\n\n  this._ = {\n    start_time: this.options.duration ? Date.now() : null,\n    fixed_size_buffer: '',\n    count_written: 0,\n    count_created: 0\n  };\n\n  if (typeof this.options.columns === 'number') {\n    this.options.columns = new Array(this.options.columns);\n  }\n\n  accepted_header_types = Object.keys(Generator).filter(function (t) {\n    return t !== 'super_' && t !== 'camelize';\n  });\n  ref = this.options.columns;\n\n  for (i = j = 0, len = ref.length; j < len; i = ++j) {\n    v = ref[i];\n\n    if (v == null) {\n      v = 'ascii';\n    }\n\n    if (typeof v === 'string') {\n      if (indexOf.call(accepted_header_types, v) < 0) {\n        throw Error(`Invalid column type: got \"${v}\", default values are ${JSON.stringify(accepted_header_types)}`);\n      }\n\n      this.options.columns[i] = Generator[v];\n    }\n  }\n\n  return this;\n};\n\nutil.inherits(Generator, stream.Readable);\nmodule.exports.Generator = Generator; // ## `Generator.prototype.random()`\n// Generate a random number between 0 and 1 with 2 decimals. The function is idempotent if it detect the \"seed\" option.\n\nGenerator.prototype.random = function () {\n  if (this.options.seed) {\n    return this.options.seed = this.options.seed * Math.PI * 100 % 100 / 100;\n  } else {\n    return Math.random();\n  }\n}; // ## `Generator.prototype.end()`\n// Stop the generation.\n\n\nGenerator.prototype.end = function () {\n  return this.push(null);\n}; // ## `Generator.prototype._read(size)`\n// Put new data into the read queue.\n\n\nGenerator.prototype._read = function (size) {\n  var column, data, header, j, l, len, len1, len2, len3, length, line, lineLength, m, n, ref; // Already started\n\n  data = [];\n  length = this._.fixed_size_buffer.length;\n\n  if (length) {\n    data.push(this._.fixed_size_buffer);\n  }\n\n  while (true) {\n    // Time for some rest: flush first and stop later\n    if (this._.count_created === this.options.length || this.options.end && Date.now() > this.options.end || this.options.duration && Date.now() > this._.start_time + this.options.duration) {\n      // Flush\n      if (data.length) {\n        if (this.options.objectMode) {\n          for (j = 0, len = data.length; j < len; j++) {\n            line = data[j];\n\n            this.__push(line);\n          }\n        } else {\n          this.__push(data.join('') + (this.options.eof ? this.options.eof : ''));\n        }\n      } // Stop\n\n\n      return this.push(null);\n    } // Create the line\n\n\n    line = [];\n    ref = this.options.columns;\n\n    for (l = 0, len1 = ref.length; l < len1; l++) {\n      header = ref[l]; // Create the field\n\n      line.push(`${header(this)}`);\n    } // Obtain line length\n\n\n    if (this.options.objectMode) {\n      lineLength = 0;\n\n      for (m = 0, len2 = line.length; m < len2; m++) {\n        column = line[m];\n        lineLength += column.length;\n      }\n    } else {\n      // Stringify the line\n      line = `${this._.count_created === 0 ? '' : this.options.rowDelimiter}${line.join(this.options.delimiter)}`;\n      lineLength = line.length;\n    }\n\n    this._.count_created++;\n\n    if (length + lineLength > size) {\n      if (this.options.objectMode) {\n        data.push(line);\n\n        for (n = 0, len3 = data.length; n < len3; n++) {\n          line = data[n];\n\n          this.__push(line);\n        }\n      } else {\n        if (this.options.fixedSize) {\n          this._.fixed_size_buffer = line.substr(size - length);\n          data.push(line.substr(0, size - length));\n        } else {\n          data.push(line);\n        }\n\n        this.__push(data.join(''));\n      }\n\n      break;\n    }\n\n    length += lineLength;\n    data.push(line);\n  }\n}; // ## `Generator.prototype._read(size)`\n// Put new data into the read queue.\n\n\nGenerator.prototype.__push = function (record) {\n  this._.count_written++;\n\n  if (this.options.sleep > 0) {\n    return setTimeout(() => {\n      return this.push(record);\n    }, this.options.sleep);\n  } else {\n    return this.push(record);\n  }\n}; // ## `Generator.ascii(gen)`\n// Generate an ASCII value.\n\n\nGenerator.ascii = function (gen) {\n  var _, char, column, j, nb_chars, ref; // Column\n\n\n  column = [];\n  nb_chars = Math.ceil(gen.random() * gen.options.maxWordLength);\n\n  for (_ = j = 0, ref = nb_chars; 0 <= ref ? j < ref : j > ref; _ = 0 <= ref ? ++j : --j) {\n    char = Math.floor(gen.random() * 32);\n    column.push(String.fromCharCode(char + (char < 16 ? 65 : 97 - 16)));\n  }\n\n  return column.join('');\n}; // ## `Generator.ascii(gen)`\n// Generate an integer value.\n\n\nGenerator.int = function (gen) {\n  return Math.floor(gen.random() * Math.pow(2, 52));\n}; // ## `Generator.bool(gen)`\n// Generate an boolean value.\n\n\nGenerator.bool = function (gen) {\n  return Math.floor(gen.random() * 2);\n}; // ## `Generator.camelize`\n\n\nGenerator.camelize = function (str) {\n  return str.replace(/_([a-z])/gi, function (_, match, index) {\n    return match.toUpperCase();\n  });\n};","map":{"version":3,"sources":["/Users/shukan/Google Drive/Personal Projects/arxived/node_modules/csv-generate/lib/index.js"],"names":["Generator","stream","util","indexOf","require","module","exports","callback","data","generator","options","arguments","length","on","d","results","read","push","objectMode","encoding","join","Buffer","concat","accepted_header_types","base","base1","base10","base11","base2","base3","base4","base5","base6","base7","base8","base9","i","j","k","len","ref","v","high_water_mark","highWaterMark","object_mode","Readable","call","camelize","columns","delimiter","duration","end","eof","fixedSize","maxWordLength","rowDelimiter","seed","sleep","_","start_time","Date","now","fixed_size_buffer","count_written","count_created","Array","Object","keys","filter","t","Error","JSON","stringify","inherits","prototype","random","Math","PI","_read","size","column","header","l","len1","len2","len3","line","lineLength","m","n","__push","substr","record","setTimeout","ascii","gen","char","nb_chars","ceil","floor","String","fromCharCode","int","pow","bool","str","replace","match","index","toUpperCase"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 2.3.2\n  // # CSV Generator\n\n  // Please look at the [documentation](https://csv.js.org/generate/) for additional information.\nvar Generator, stream, util,\n  indexOf = [].indexOf;\n\nstream = require('stream');\n\nutil = require('util');\n\n// ## Usage  \n\n// Stream API, for maximum of power:\n\n// `generate([options])`\n\n// Callback approach, for ease of use:\n\n// `generate([options], callback)`\n\n// ## Source Code\nmodule.exports = function() {\n  var callback, data, generator, options;\n  if (arguments.length === 2) {\n    options = arguments[0];\n    callback = arguments[1];\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      options = {};\n      callback = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  } else if (arguments.length === 0) {\n    options = {};\n  }\n  generator = new Generator(options);\n  if (callback) {\n    data = [];\n    generator.on('readable', function() {\n      var d, results;\n      results = [];\n      while (d = generator.read()) {\n        results.push(data.push(d));\n      }\n      return results;\n    });\n    generator.on('error', callback);\n    generator.on('end', function() {\n      if (!generator.options.objectMode) {\n        if (generator.options.encoding) {\n          data = data.join('');\n        } else {\n          data = Buffer.concat(data);\n        }\n      }\n      return callback(null, data);\n    });\n  }\n  return generator;\n};\n\n// ## `Generator([options])`\n\n// Feel free to ask for new features and to participate by writting issues and preparing push requests.\n\n// Options are documented [here](http://csv.js.org/generate/options/).\nGenerator = function(options = {}) {\n  var accepted_header_types, base, base1, base10, base11, base2, base3, base4, base5, base6, base7, base8, base9, i, j, k, len, ref, v;\n  if (options.high_water_mark) {\n    // Convert Stream Readable options if underscored\n    options.highWaterMark = options.high_water_mark;\n  }\n  if (options.object_mode) {\n    options.objectMode = options.object_mode;\n  }\n  // Call parent constructor\n  stream.Readable.call(this, options);\n  // Clone and camelize options\n  this.options = {};\n  for (k in options) {\n    v = options[k];\n    this.options[Generator.camelize(k)] = v;\n  }\n  // Normalize options\n  if ((base = this.options).columns == null) {\n    base.columns = 8;\n  }\n  if ((base1 = this.options).delimiter == null) {\n    base1.delimiter = ',';\n  }\n  if ((base2 = this.options).duration == null) {\n    base2.duration = null;\n  }\n  if ((base3 = this.options).encoding == null) {\n    base3.encoding = null;\n  }\n  if ((base4 = this.options).end == null) {\n    base4.end = null;\n  }\n  if ((base5 = this.options).eof == null) {\n    base5.eof = false;\n  }\n  if ((base6 = this.options).fixedSize == null) {\n    base6.fixedSize = false;\n  }\n  if ((base7 = this.options).length == null) {\n    base7.length = -1;\n  }\n  if ((base8 = this.options).maxWordLength == null) {\n    base8.maxWordLength = 16;\n  }\n  if ((base9 = this.options).rowDelimiter == null) {\n    base9.rowDelimiter = '\\n';\n  }\n  if ((base10 = this.options).seed == null) {\n    base10.seed = false;\n  }\n  if ((base11 = this.options).sleep == null) {\n    base11.sleep = 0;\n  }\n  if (this.options.eof === true) {\n    // Default values\n    this.options.eof = this.options.rowDelimiter;\n  }\n  // State\n  this._ = {\n    start_time: this.options.duration ? Date.now() : null,\n    fixed_size_buffer: '',\n    count_written: 0,\n    count_created: 0\n  };\n  if (typeof this.options.columns === 'number') {\n    this.options.columns = new Array(this.options.columns);\n  }\n  accepted_header_types = Object.keys(Generator).filter(function(t) {\n    return t !== 'super_' && t !== 'camelize';\n  });\n  ref = this.options.columns;\n  for (i = j = 0, len = ref.length; j < len; i = ++j) {\n    v = ref[i];\n    if (v == null) {\n      v = 'ascii';\n    }\n    if (typeof v === 'string') {\n      if (indexOf.call(accepted_header_types, v) < 0) {\n        throw Error(`Invalid column type: got \"${v}\", default values are ${JSON.stringify(accepted_header_types)}`);\n      }\n      this.options.columns[i] = Generator[v];\n    }\n  }\n  return this;\n};\n\nutil.inherits(Generator, stream.Readable);\n\nmodule.exports.Generator = Generator;\n\n// ## `Generator.prototype.random()`\n\n// Generate a random number between 0 and 1 with 2 decimals. The function is idempotent if it detect the \"seed\" option.\nGenerator.prototype.random = function() {\n  if (this.options.seed) {\n    return this.options.seed = this.options.seed * Math.PI * 100 % 100 / 100;\n  } else {\n    return Math.random();\n  }\n};\n\n// ## `Generator.prototype.end()`\n\n// Stop the generation.\nGenerator.prototype.end = function() {\n  return this.push(null);\n};\n\n// ## `Generator.prototype._read(size)`\n\n// Put new data into the read queue.\nGenerator.prototype._read = function(size) {\n  var column, data, header, j, l, len, len1, len2, len3, length, line, lineLength, m, n, ref;\n  // Already started\n  data = [];\n  length = this._.fixed_size_buffer.length;\n  if (length) {\n    data.push(this._.fixed_size_buffer);\n  }\n  while (true) {\n    // Time for some rest: flush first and stop later\n    if ((this._.count_created === this.options.length) || (this.options.end && Date.now() > this.options.end) || (this.options.duration && Date.now() > this._.start_time + this.options.duration)) {\n      // Flush\n      if (data.length) {\n        if (this.options.objectMode) {\n          for (j = 0, len = data.length; j < len; j++) {\n            line = data[j];\n            this.__push(line);\n          }\n        } else {\n          this.__push(data.join('') + (this.options.eof ? this.options.eof : ''));\n        }\n      }\n      // Stop\n      return this.push(null);\n    }\n    // Create the line\n    line = [];\n    ref = this.options.columns;\n    for (l = 0, len1 = ref.length; l < len1; l++) {\n      header = ref[l];\n      // Create the field\n      line.push(`${header(this)}`);\n    }\n    // Obtain line length\n    if (this.options.objectMode) {\n      lineLength = 0;\n      for (m = 0, len2 = line.length; m < len2; m++) {\n        column = line[m];\n        lineLength += column.length;\n      }\n    } else {\n      // Stringify the line\n      line = `${(this._.count_created === 0 ? '' : this.options.rowDelimiter)}${line.join(this.options.delimiter)}`;\n      lineLength = line.length;\n    }\n    this._.count_created++;\n    if (length + lineLength > size) {\n      if (this.options.objectMode) {\n        data.push(line);\n        for (n = 0, len3 = data.length; n < len3; n++) {\n          line = data[n];\n          this.__push(line);\n        }\n      } else {\n        if (this.options.fixedSize) {\n          this._.fixed_size_buffer = line.substr(size - length);\n          data.push(line.substr(0, size - length));\n        } else {\n          data.push(line);\n        }\n        this.__push(data.join(''));\n      }\n      break;\n    }\n    length += lineLength;\n    data.push(line);\n  }\n};\n\n// ## `Generator.prototype._read(size)`\n\n// Put new data into the read queue.\nGenerator.prototype.__push = function(record) {\n  this._.count_written++;\n  if (this.options.sleep > 0) {\n    return setTimeout(() => {\n      return this.push(record);\n    }, this.options.sleep);\n  } else {\n    return this.push(record);\n  }\n};\n\n// ## `Generator.ascii(gen)`\n\n// Generate an ASCII value.\nGenerator.ascii = function(gen) {\n  var _, char, column, j, nb_chars, ref;\n  // Column\n  column = [];\n  nb_chars = Math.ceil(gen.random() * gen.options.maxWordLength);\n  for (_ = j = 0, ref = nb_chars; (0 <= ref ? j < ref : j > ref); _ = 0 <= ref ? ++j : --j) {\n    char = Math.floor(gen.random() * 32);\n    column.push(String.fromCharCode(char + (char < 16 ? 65 : 97 - 16)));\n  }\n  return column.join('');\n};\n\n// ## `Generator.ascii(gen)`\n\n// Generate an integer value.\nGenerator.int = function(gen) {\n  return Math.floor(gen.random() * Math.pow(2, 52));\n};\n\n// ## `Generator.bool(gen)`\n\n// Generate an boolean value.\nGenerator.bool = function(gen) {\n  return Math.floor(gen.random() * 2);\n};\n\n// ## `Generator.camelize`\nGenerator.camelize = function(str) {\n  return str.replace(/_([a-z])/gi, function(_, match, index) {\n    return match.toUpperCase();\n  });\n};\n"]},"metadata":{},"sourceType":"script"}