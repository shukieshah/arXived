{"ast":null,"code":"var _jsxFileName = \"/Users/shukan/Google Drive/Personal Projects/arxived/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const topic = \"quantum computing\";\n  const limit = 100;\n  const [entries, setEntries] = useState([['title', 'published', 'firstauthor', 'lastauthor', 'summary', 'category', 'link']]);\n  const BASE_API_URL = `http://export.arxiv.org/api/query?search_query=all:\"${topic}\"&sortBy=submittedDate&sortOrder=descending&max_results=${limit}`;\n  useEffect(() => {\n    scrapeArXiv();\n  }, []);\n\n  const scrapeArXiv = async () => {\n    const response = await fetch(BASE_API_URL);\n    const responseString = await response.text();\n    const data = new window.DOMParser().parseFromString(responseString, \"text/xml\").querySelectorAll('entry');\n    console.log(\"Scraped \" + data.length);\n\n    if (data.length > 0) {}\n\n    console.log(\"Scraped \" + entries.length);\n\n    for (var i = 0; i < entries.length; i++) {\n      console.log(entries[i].querySelector('title').textContent);\n      console.log(entries[i].querySelector('published').textContent);\n      const authors = entries[i].querySelectorAll('author');\n\n      for (var j = 0; j < authors.length; j++) {\n        console.log(authors[j].textContent);\n      }\n\n      console.log(entries[i].querySelector('summary').textContent);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"input-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"topic-search-bar\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit-button\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Scrape arXiv\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/shukan/Google Drive/Personal Projects/arxived/src/App.js"],"names":["React","useEffect","useState","App","topic","limit","entries","setEntries","BASE_API_URL","scrapeArXiv","response","fetch","responseString","text","data","window","DOMParser","parseFromString","querySelectorAll","console","log","length","i","querySelector","textContent","authors","j"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAGhB,QAAMC,KAAK,GAAG,mBAAd;AACA,QAAMC,KAAK,GAAG,GAAd;AAIA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAC,CAAC,OAAD,EAAU,WAAV,EAAuB,aAAvB,EAAsC,YAAtC,EAAoD,SAApD,EAA+D,UAA/D,EAA2E,MAA3E,CAAD,CAAD,CAAtC;AAEA,QAAMM,YAAY,GAAI,uDAAsDJ,KAAM,2DAA0DC,KAAM,EAAlJ;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,YAAY;AAC9B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,YAAD,CAA5B;AACA,UAAMI,cAAc,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA7B;AACA,UAAMC,IAAI,GAAI,IAAIC,MAAM,CAACC,SAAX,EAAD,CAAyBC,eAAzB,CAAyCL,cAAzC,EAAyD,UAAzD,EAAqEM,gBAArE,CAAsF,OAAtF,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaN,IAAI,CAACO,MAA9B;;AAGA,QAAIP,IAAI,CAACO,MAAL,GAAc,CAAlB,EAAqB,CAEpB;;AAEDF,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAad,OAAO,CAACe,MAAjC;;AAEA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGhB,OAAO,CAACe,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACrCH,MAAAA,OAAO,CAACC,GAAR,CAAYd,OAAO,CAACgB,CAAD,CAAP,CAAWC,aAAX,CAAyB,OAAzB,EAAkCC,WAA9C;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYd,OAAO,CAACgB,CAAD,CAAP,CAAWC,aAAX,CAAyB,WAAzB,EAAsCC,WAAlD;AACA,YAAMC,OAAO,GAAGnB,OAAO,CAACgB,CAAD,CAAP,CAAWJ,gBAAX,CAA4B,QAA5B,CAAhB;;AACA,WAAK,IAAIQ,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGD,OAAO,CAACJ,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;AACrCP,QAAAA,OAAO,CAACC,GAAR,CAAYK,OAAO,CAACC,CAAD,CAAP,CAAWF,WAAvB;AACD;;AACDL,MAAAA,OAAO,CAACC,GAAR,CAAYd,OAAO,CAACgB,CAAD,CAAP,CAAWC,aAAX,CAAyB,SAAzB,EAAoCC,WAAhD;AACD;AACF,GAtBD;;AAyBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,IAAI,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADF,CADF;AAUD,CAnDD;;AAqDA,eAAerB,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\n\nconst App = () => {\n\n  \n  const topic = \"quantum computing\";\n  const limit = 100;\n  \n\n  \n  const [entries, setEntries] = useState([['title', 'published', 'firstauthor', 'lastauthor', 'summary', 'category', 'link']]);\n\n  const BASE_API_URL = `http://export.arxiv.org/api/query?search_query=all:\"${topic}\"&sortBy=submittedDate&sortOrder=descending&max_results=${limit}`;\n  \n  useEffect(() => {\n    scrapeArXiv();\n  }, []);\n\n  const scrapeArXiv = async () => {\n    const response = await fetch(BASE_API_URL);\n    const responseString = await response.text();\n    const data = (new window.DOMParser()).parseFromString(responseString, \"text/xml\").querySelectorAll('entry');\n    console.log(\"Scraped \" + data.length);\n    \n\n    if (data.length > 0) {\n\n    }\n    \n    console.log(\"Scraped \" + entries.length);\n\n    for (var i=0; i < entries.length; i++) {\n      console.log(entries[i].querySelector('title').textContent);\n      console.log(entries[i].querySelector('published').textContent);\n      const authors = entries[i].querySelectorAll('author'); \n      for (var j=0; j < authors.length; j++) {\n        console.log(authors[j].textContent);\n      }\n      console.log(entries[i].querySelector('summary').textContent);\n    }\n  }\n\n\n  return (\n    <div className='App'>\n      <form className=\"input-form\">\n        <input className=\"topic-search-bar\" type=\"text\"/>\n        <button className=\"submit-button\" type=\"submit\">\n          Scrape arXiv\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}