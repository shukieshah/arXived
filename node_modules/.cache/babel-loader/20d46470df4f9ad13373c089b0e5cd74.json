{"ast":null,"code":"class ResizeableBuffer {\n  constructor(size = 100) {\n    this.size = size;\n    this.length = 0;\n    this.buf = Buffer.alloc(size);\n  }\n\n  prepend(val) {\n    const length = this.length++;\n\n    if (length === this.size) {\n      this.resize();\n    }\n\n    const buf = this.clone();\n    this.buf[0] = val;\n    buf.copy(this.buf, 1, 0, length);\n  }\n\n  append(val) {\n    const length = this.length++;\n\n    if (length === this.size) {\n      this.resize();\n    }\n\n    this.buf[length] = val;\n  }\n\n  clone() {\n    return Buffer.from(this.buf.slice(0, this.length));\n  }\n\n  resize() {\n    const length = this.length;\n    this.size = this.size * 2;\n    const buf = Buffer.alloc(this.size);\n    this.buf.copy(buf, 0, 0, length);\n    this.buf = buf;\n  }\n\n  toString() {\n    return this.buf.slice(0, this.length).toString();\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n\n  reset() {\n    this.length = 0;\n  }\n\n}\n\nmodule.exports = ResizeableBuffer;","map":{"version":3,"sources":["/Users/shukan/Google Drive/Personal Projects/arxived/node_modules/csv-parse/lib/ResizeableBuffer.js"],"names":["ResizeableBuffer","constructor","size","length","buf","Buffer","alloc","prepend","val","resize","clone","copy","append","from","slice","toString","toJSON","reset","module","exports"],"mappings":"AAEA,MAAMA,gBAAN,CAAsB;AACpBC,EAAAA,WAAW,CAACC,IAAI,GAAC,GAAN,EAAU;AACnB,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAc,CAAd;AACA,SAAKC,GAAL,GAAWC,MAAM,CAACC,KAAP,CAAaJ,IAAb,CAAX;AACD;;AACDK,EAAAA,OAAO,CAACC,GAAD,EAAK;AACV,UAAML,MAAM,GAAG,KAAKA,MAAL,EAAf;;AACA,QAAGA,MAAM,KAAK,KAAKD,IAAnB,EAAwB;AACtB,WAAKO,MAAL;AACD;;AACD,UAAML,GAAG,GAAG,KAAKM,KAAL,EAAZ;AACA,SAAKN,GAAL,CAAS,CAAT,IAAcI,GAAd;AACAJ,IAAAA,GAAG,CAACO,IAAJ,CAAS,KAAKP,GAAd,EAAkB,CAAlB,EAAqB,CAArB,EAAwBD,MAAxB;AACD;;AACDS,EAAAA,MAAM,CAACJ,GAAD,EAAK;AACT,UAAML,MAAM,GAAG,KAAKA,MAAL,EAAf;;AACA,QAAGA,MAAM,KAAK,KAAKD,IAAnB,EAAwB;AACtB,WAAKO,MAAL;AACD;;AACD,SAAKL,GAAL,CAASD,MAAT,IAAmBK,GAAnB;AACD;;AACDE,EAAAA,KAAK,GAAE;AACL,WAAOL,MAAM,CAACQ,IAAP,CAAY,KAAKT,GAAL,CAASU,KAAT,CAAe,CAAf,EAAkB,KAAKX,MAAvB,CAAZ,CAAP;AACD;;AACDM,EAAAA,MAAM,GAAE;AACN,UAAMN,MAAM,GAAG,KAAKA,MAApB;AACA,SAAKD,IAAL,GAAY,KAAKA,IAAL,GAAY,CAAxB;AACA,UAAME,GAAG,GAAGC,MAAM,CAACC,KAAP,CAAa,KAAKJ,IAAlB,CAAZ;AACA,SAAKE,GAAL,CAASO,IAAT,CAAcP,GAAd,EAAkB,CAAlB,EAAqB,CAArB,EAAwBD,MAAxB;AACA,SAAKC,GAAL,GAAWA,GAAX;AACD;;AACDW,EAAAA,QAAQ,GAAE;AACR,WAAO,KAAKX,GAAL,CAASU,KAAT,CAAe,CAAf,EAAkB,KAAKX,MAAvB,EAA+BY,QAA/B,EAAP;AACD;;AACDC,EAAAA,MAAM,GAAE;AACN,WAAO,KAAKD,QAAL,EAAP;AACD;;AACDE,EAAAA,KAAK,GAAE;AACL,SAAKd,MAAL,GAAc,CAAd;AACD;;AAxCmB;;AA2CtBe,MAAM,CAACC,OAAP,GAAiBnB,gBAAjB","sourcesContent":["\n\nclass ResizeableBuffer{\n  constructor(size=100){\n    this.size = size\n    this.length = 0\n    this.buf = Buffer.alloc(size)\n  }\n  prepend(val){\n    const length = this.length++\n    if(length === this.size){\n      this.resize()\n    }\n    const buf = this.clone()\n    this.buf[0] = val\n    buf.copy(this.buf,1, 0, length)\n  }\n  append(val){\n    const length = this.length++\n    if(length === this.size){\n      this.resize()\n    }\n    this.buf[length] = val\n  }\n  clone(){\n    return Buffer.from(this.buf.slice(0, this.length))\n  }\n  resize(){\n    const length = this.length\n    this.size = this.size * 2\n    const buf = Buffer.alloc(this.size)\n    this.buf.copy(buf,0, 0, length)\n    this.buf = buf\n  }\n  toString(){\n    return this.buf.slice(0, this.length).toString()\n  }\n  toJSON(){\n    return this.toString()\n  }\n  reset(){\n    this.length = 0\n  }\n}\n\nmodule.exports = ResizeableBuffer\n"]},"metadata":{},"sourceType":"script"}