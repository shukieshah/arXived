{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Parser_1 = require(\"./Parser\");\n\nvar Streamer_1 = require(\"./Streamer\");\n\nvar EOL = '\\r\\n';\nexports.eol = EOL;\nvar SEPARATOR = ',';\nexports.separator = SEPARATOR;\nvar quoteCharReqex = new RegExp('\"', 'g');\nvar specialCharReqex = new RegExp('[\"\\r\\n]', 'g');\n\nvar _shouldBeQuoted = function (value, sep) {\n  return value.search(specialCharReqex) >= 0 || value.includes(sep);\n};\n\nvar _quoteIfRquired = function (value, sep) {\n  return _shouldBeQuoted(value, sep) ? '\"' + value.replace(quoteCharReqex, '\"\"') + '\"' : value;\n};\n\nvar _stringifySingleValue = function (item) {\n  if (item === 0) {\n    item = '0';\n  } else if (item === undefined || item === null) {\n    item = '';\n  }\n\n  if (typeof item != 'string') {\n    var s = item.toString();\n\n    if (s == '[object Object]') {\n      item = JSON.stringify(item);\n\n      if (item == '{}') {\n        item = '';\n      }\n    } else {\n      item = s;\n    }\n  }\n\n  return item;\n};\n\nvar reducer = function (item, memo, sep, prependSep) {\n  item = _stringifySingleValue(item);\n  return (memo !== undefined || prependSep ? \"\" + memo + sep : '') + _quoteIfRquired(item, sep);\n};\n\nvar detect = function (input) {\n  var separators = [',', ';', '|', '\\t'];\n  var idx = separators.map(function (separator) {\n    return input.indexOf(separator);\n  }).reduce(function (prev, cur) {\n    return prev === -1 || cur !== -1 && cur < prev ? cur : prev;\n  });\n  return input[idx] || ',';\n};\n\nexports.detect = detect;\n\nvar stringify = function (input, sep) {\n  if (sep === void 0) {\n    sep = SEPARATOR;\n  }\n\n  var ret;\n  sep = sep || SEPARATOR;\n\n  if (Array.isArray(input)) {\n    if (input.length === 0) {\n      ret = EOL;\n    } else if (!Array.isArray(input[0])) {\n      for (var loop = 0; loop < input.length; loop++) {\n        ret = reducer(input[loop], ret, sep, loop > 0);\n      }\n\n      ret += EOL;\n    } else if (Array.isArray(input[0])) {\n      ret = input.map(function (item) {\n        return stringify(item, sep);\n      }).join('');\n    }\n  } else if (typeof input == 'object') {\n    for (var key in input) {\n      if (input.hasOwnProperty(key)) {\n        ret = reducer(input[key], ret, sep);\n      }\n    }\n\n    ret += EOL;\n  } else {\n    ret = reducer(input, ret, sep) + EOL;\n  }\n\n  return ret;\n};\n\nexports.stringify = stringify;\n\nvar parse = function (input, sep, quo) {\n  if (sep === undefined) {\n    // try to detect the separator if not provided\n    sep = detect(input);\n  }\n\n  var csv = new Parser_1.Parser(input, sep, quo);\n  return csv.File();\n};\n\nexports.parse = parse;\n\nfunction read(input, sep, quo, callback) {\n  if (callback === undefined) {\n    if (quo === undefined) {\n      // arguments.length < 3) {\n      if (typeof sep !== 'function') {\n        throw Error('Last/second argument is not a callback');\n      }\n\n      callback = sep;\n      sep = ',';\n    } else {\n      // arguments.length < 4) {\n      if (typeof quo !== 'function') {\n        throw Error('Last/third argument is not a callback');\n      }\n\n      callback = quo;\n      quo = '\"';\n    }\n  }\n\n  var csv = new Parser_1.Parser(input, sep, quo);\n  var fields = csv.Row();\n  callback(fields);\n  return csv.pointer;\n}\n\nexports.read = read;\n\nfunction forEach(input, sep, quo, callback) {\n  if (callback === undefined) {\n    if (quo === undefined) {\n      // arguments.length < 3) {\n      if (typeof sep !== 'function') {\n        throw Error('Last/second argument is not a callback');\n      }\n\n      callback = sep;\n      sep = ',';\n    } else {\n      // arguments.length < 4) {\n      if (typeof quo !== 'function') {\n        throw Error('Last/third argument is not a callback');\n      }\n\n      callback = quo;\n      quo = '\"';\n    }\n  }\n\n  var i = 0;\n  var s = 0;\n  var r;\n\n  while (r = read(input.slice(s), sep, quo, function (fields) {\n    return callback(fields, i++);\n  })) {\n    s += r;\n  }\n}\n\nexports.forEach = forEach;\n\nfunction readAll(input, sep, quo, callback) {\n  if (callback === undefined) {\n    if (quo === undefined) {\n      // arguments.length < 3) {\n      if (typeof sep !== 'function') {\n        throw Error('Last/second argument is not a callback');\n      }\n\n      callback = sep;\n      sep = ',';\n    } else {\n      // arguments.length < 4) {\n      if (typeof quo !== 'function') {\n        throw Error('Last/third argument is not a callback');\n      }\n\n      callback = quo;\n      quo = '\"';\n    }\n  }\n\n  var csv = new Parser_1.Parser(input, sep, quo);\n  var rows = csv.File();\n  callback(rows);\n  return csv.pointer;\n}\n\nexports.readAll = readAll;\n\nfunction readChunk(input, sep, quo, callback) {\n  if (callback === undefined) {\n    if (quo === undefined) {\n      // arguments.length < 3) {\n      if (typeof sep !== 'function') {\n        throw Error('Last/second argument is not a callback');\n      }\n\n      callback = sep;\n      sep = ',';\n    } else {\n      // arguments.length < 4) {\n      if (typeof quo !== 'function') {\n        throw Error('Last/third argument is not a callback');\n      }\n\n      callback = quo;\n      quo = '\"';\n    }\n  }\n\n  var csv = new Parser_1.Parser(input, sep, quo);\n  var rows = csv.File();\n  var ret = 0;\n\n  if (csv.pointer < input.length) {\n    ret = csv.pointer;\n  } else {\n    rows.pop();\n    ret = csv.linePointer;\n  }\n\n  callback(rows);\n  return ret;\n}\n\nexports.readChunk = readChunk;\n\nvar fetch = function (input, sep, quo) {\n  // TODO\n  var output;\n  read(input, sep, quo, function (fields) {\n    output = fields;\n  });\n  return output;\n};\n\nexports.fetch = fetch;\n\nvar createStream = function (options) {\n  return new Streamer_1.Streamer(options);\n};\n\nexports.createStream = createStream;","map":{"version":3,"sources":["/Users/shukan/Google Drive/Personal Projects/arxived/node_modules/csv-string/dist/CSV.js"],"names":["Object","defineProperty","exports","value","Parser_1","require","Streamer_1","EOL","eol","SEPARATOR","separator","quoteCharReqex","RegExp","specialCharReqex","_shouldBeQuoted","sep","search","includes","_quoteIfRquired","replace","_stringifySingleValue","item","undefined","s","toString","JSON","stringify","reducer","memo","prependSep","detect","input","separators","idx","map","indexOf","reduce","prev","cur","ret","Array","isArray","length","loop","join","key","hasOwnProperty","parse","quo","csv","Parser","File","read","callback","Error","fields","Row","pointer","forEach","i","r","slice","readAll","rows","readChunk","pop","linePointer","fetch","output","createStream","options","Streamer"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Parser_1 = require(\"./Parser\");\nvar Streamer_1 = require(\"./Streamer\");\nvar EOL = '\\r\\n';\nexports.eol = EOL;\nvar SEPARATOR = ',';\nexports.separator = SEPARATOR;\nvar quoteCharReqex = new RegExp('\"', 'g');\nvar specialCharReqex = new RegExp('[\"\\r\\n]', 'g');\nvar _shouldBeQuoted = function (value, sep) {\n    return value.search(specialCharReqex) >= 0 || value.includes(sep);\n};\nvar _quoteIfRquired = function (value, sep) {\n    return _shouldBeQuoted(value, sep)\n        ? '\"' + value.replace(quoteCharReqex, '\"\"') + '\"'\n        : value;\n};\nvar _stringifySingleValue = function (item) {\n    if (item === 0) {\n        item = '0';\n    }\n    else if (item === undefined || item === null) {\n        item = '';\n    }\n    if (typeof item != 'string') {\n        var s = item.toString();\n        if (s == '[object Object]') {\n            item = JSON.stringify(item);\n            if (item == '{}') {\n                item = '';\n            }\n        }\n        else {\n            item = s;\n        }\n    }\n    return item;\n};\nvar reducer = function (item, memo, sep, prependSep) {\n    item = _stringifySingleValue(item);\n    return ((memo !== undefined || prependSep ? \"\" + memo + sep : '') +\n        _quoteIfRquired(item, sep));\n};\nvar detect = function (input) {\n    var separators = [',', ';', '|', '\\t'];\n    var idx = separators\n        .map(function (separator) { return input.indexOf(separator); })\n        .reduce(function (prev, cur) {\n        return prev === -1 || (cur !== -1 && cur < prev) ? cur : prev;\n    });\n    return (input[idx] || ',');\n};\nexports.detect = detect;\nvar stringify = function (input, sep) {\n    if (sep === void 0) { sep = SEPARATOR; }\n    var ret;\n    sep = sep || SEPARATOR;\n    if (Array.isArray(input)) {\n        if (input.length === 0) {\n            ret = EOL;\n        }\n        else if (!Array.isArray(input[0])) {\n            for (var loop = 0; loop < input.length; loop++) {\n                ret = reducer(input[loop], ret, sep, loop > 0);\n            }\n            ret += EOL;\n        }\n        else if (Array.isArray(input[0])) {\n            ret = input.map(function (item) { return stringify(item, sep); }).join('');\n        }\n    }\n    else if (typeof input == 'object') {\n        for (var key in input) {\n            if (input.hasOwnProperty(key)) {\n                ret = reducer(input[key], ret, sep);\n            }\n        }\n        ret += EOL;\n    }\n    else {\n        ret = reducer(input, ret, sep) + EOL;\n    }\n    return ret;\n};\nexports.stringify = stringify;\nvar parse = function (input, sep, quo) {\n    if (sep === undefined) {\n        // try to detect the separator if not provided\n        sep = detect(input);\n    }\n    var csv = new Parser_1.Parser(input, sep, quo);\n    return csv.File();\n};\nexports.parse = parse;\nfunction read(input, sep, quo, callback) {\n    if (callback === undefined) {\n        if (quo === undefined) {\n            // arguments.length < 3) {\n            if (typeof sep !== 'function') {\n                throw Error('Last/second argument is not a callback');\n            }\n            callback = sep;\n            sep = ',';\n        }\n        else {\n            // arguments.length < 4) {\n            if (typeof quo !== 'function') {\n                throw Error('Last/third argument is not a callback');\n            }\n            callback = quo;\n            quo = '\"';\n        }\n    }\n    var csv = new Parser_1.Parser(input, sep, quo);\n    var fields = csv.Row();\n    callback(fields);\n    return csv.pointer;\n}\nexports.read = read;\nfunction forEach(input, sep, quo, callback) {\n    if (callback === undefined) {\n        if (quo === undefined) {\n            // arguments.length < 3) {\n            if (typeof sep !== 'function') {\n                throw Error('Last/second argument is not a callback');\n            }\n            callback = sep;\n            sep = ',';\n        }\n        else {\n            // arguments.length < 4) {\n            if (typeof quo !== 'function') {\n                throw Error('Last/third argument is not a callback');\n            }\n            callback = quo;\n            quo = '\"';\n        }\n    }\n    var i = 0;\n    var s = 0;\n    var r;\n    while ((r = read(input.slice(s), sep, quo, function (fields) {\n        return callback(fields, i++);\n    }))) {\n        s += r;\n    }\n}\nexports.forEach = forEach;\nfunction readAll(input, sep, quo, callback) {\n    if (callback === undefined) {\n        if (quo === undefined) {\n            // arguments.length < 3) {\n            if (typeof sep !== 'function') {\n                throw Error('Last/second argument is not a callback');\n            }\n            callback = sep;\n            sep = ',';\n        }\n        else {\n            // arguments.length < 4) {\n            if (typeof quo !== 'function') {\n                throw Error('Last/third argument is not a callback');\n            }\n            callback = quo;\n            quo = '\"';\n        }\n    }\n    var csv = new Parser_1.Parser(input, sep, quo);\n    var rows = csv.File();\n    callback(rows);\n    return csv.pointer;\n}\nexports.readAll = readAll;\nfunction readChunk(input, sep, quo, callback) {\n    if (callback === undefined) {\n        if (quo === undefined) {\n            // arguments.length < 3) {\n            if (typeof sep !== 'function') {\n                throw Error('Last/second argument is not a callback');\n            }\n            callback = sep;\n            sep = ',';\n        }\n        else {\n            // arguments.length < 4) {\n            if (typeof quo !== 'function') {\n                throw Error('Last/third argument is not a callback');\n            }\n            callback = quo;\n            quo = '\"';\n        }\n    }\n    var csv = new Parser_1.Parser(input, sep, quo);\n    var rows = csv.File();\n    var ret = 0;\n    if (csv.pointer < input.length) {\n        ret = csv.pointer;\n    }\n    else {\n        rows.pop();\n        ret = csv.linePointer;\n    }\n    callback(rows);\n    return ret;\n}\nexports.readChunk = readChunk;\nvar fetch = function (input, sep, quo) {\n    // TODO\n    var output;\n    read(input, sep, quo, function (fields) {\n        output = fields;\n    });\n    return output;\n};\nexports.fetch = fetch;\nvar createStream = function (options) { return new Streamer_1.Streamer(options); };\nexports.createStream = createStream;\n"]},"metadata":{},"sourceType":"script"}